## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
awscli2.pkg-path = "awscli2"
gh.pkg-path = "gh"
gitFull.pkg-path = "gitFull"
jq.pkg-path = "jq"
bat.pkg-path = "bat"
curl.pkg-path = "curl"
gum.pkg-path = "gum"
# gum.pkg-path = "gum"
# gum.version = "^0.14.5"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
on-activate = '''
# Use raw GitHub URL instead of blob URL
BOOTSTRAP_SCRIPT_URL="https://raw.githubusercontent.com/barstoolbluz/local-cli-tools/master/.flox/cache/bootstrap_auth.sh"
BOOTSTRAP_SCRIPT_PATH="${FLOX_ENV_CACHE}/bootstrap_auth.sh"
FUNCTIONS_DIR="${FLOX_ENV_CACHE}/functions"

# Create cache directory if it doesn't exist
mkdir -p "${FLOX_ENV_CACHE}"

# Check if functions directory exists (indicates bootstrap has completed)
if [ -d "${FUNCTIONS_DIR}" ]; then
  # Environment is already set up - silent success
  return 0
fi

# Check if we need to download the script
if [ ! -f "${BOOTSTRAP_SCRIPT_PATH}" ]; then
  # Script doesn't exist locally, need to download silently
  if ! curl -s -o "${BOOTSTRAP_SCRIPT_PATH}" "${BOOTSTRAP_SCRIPT_URL}"; then
    echo "Failed to download bootstrap script" >&2
    return 1
  fi
  # Make it executable
  chmod +x "${BOOTSTRAP_SCRIPT_PATH}"
fi

# Execute the script
"${BOOTSTRAP_SCRIPT_PATH}"
'''

[profile]
bash = '''
# Source secure wrapper functions if they exist
source "${FLOX_ENV_CACHE}/functions/shell_functions.sh" 2>/dev/null || true

# Bootstrap function for bash
bootstrap() {
  local BOOTSTRAP_SCRIPT_URL="https://raw.githubusercontent.com/barstoolbluz/local-cli-tools/master/.flox/cache/bootstrap_auth.sh"
  local BOOTSTRAP_SCRIPT_PATH="${FLOX_ENV_CACHE}/bootstrap_auth.sh"

  mkdir -p "${FLOX_ENV_CACHE}"

  # Download or update the bootstrap script
  curl -s -o "${BOOTSTRAP_SCRIPT_PATH}" "${BOOTSTRAP_SCRIPT_URL}" || return 1
  chmod +x "${BOOTSTRAP_SCRIPT_PATH}"

  # Run the script
  "${BOOTSTRAP_SCRIPT_PATH}"
}
'''

zsh = '''
# Source secure wrapper functions if they exist
source "${FLOX_ENV_CACHE}/functions/shell_functions.sh" 2>/dev/null || true

# Bootstrap function for zsh
bootstrap() {
  local BOOTSTRAP_SCRIPT_URL="https://raw.githubusercontent.com/barstoolbluz/local-cli-tools/master/.flox/cache/bootstrap_auth.sh"
  local BOOTSTRAP_SCRIPT_PATH="${FLOX_ENV_CACHE}/bootstrap_auth.sh"

  mkdir -p "${FLOX_ENV_CACHE}"

  # Download or update the bootstrap script
  curl -s -o "${BOOTSTRAP_SCRIPT_PATH}" "${BOOTSTRAP_SCRIPT_URL}" || return 1
  chmod +x "${BOOTSTRAP_SCRIPT_PATH}"

  # Run the script
  "${BOOTSTRAP_SCRIPT_PATH}"
}
'''

fish = '''
# Source secure wrapper functions if they exist
source "$FLOX_ENV_CACHE/functions/shell_functions.fish" 2>/dev/null || true

# Bootstrap function for fish
function bootstrap
  set BOOTSTRAP_SCRIPT_URL "https://raw.githubusercontent.com/barstoolbluz/local-cli-tools/master/.flox/cache/bootstrap_auth.sh"
  set BOOTSTRAP_SCRIPT_PATH "$FLOX_ENV_CACHE/bootstrap_auth.sh"

  mkdir -p "$FLOX_ENV_CACHE"

  # Download or update the bootstrap script
  curl -s -o "$BOOTSTRAP_SCRIPT_PATH" "$BOOTSTRAP_SCRIPT_URL" || return 1
  chmod +x "$BOOTSTRAP_SCRIPT_PATH"

  # Run the script
  "$BOOTSTRAP_SCRIPT_PATH"
end
'''

## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false

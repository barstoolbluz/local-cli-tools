## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
awscli2.pkg-path = "awscli2"
gh.pkg-path = "gh"
gitFull.pkg-path = "gitFull"
jq.pkg-path = "jq"
bat.pkg-path = "bat"
curl.pkg-path = "curl"
gum.pkg-path = "gum"
# gum.pkg-path = "gum"
# gum.version = "^0.14.5"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
# on-activate = '''
#   # -> Set variables, create files and directories
#   # -> Perform initialization steps, e.g. create a python venv
#   # -> Useful environment variables:
#   #      - FLOX_ENV_PROJECT=/home/user/example
#   #      - FLOX_ENV=/home/user/example/.flox/run
#   #      - FLOX_ENV_CACHE=/home/user/example/.flox/cache
# '''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
bash = '''
# Source secure wrapper functions
if [ -f "${FLOX_ENV_CACHE}/functions/shell_functions.sh" ]; then
  source "${FLOX_ENV_CACHE}/functions/shell_functions.sh"
fi
'''

zsh = '''
# Source secure wrapper functions
if [ -f "${FLOX_ENV_CACHE}/functions/shell_functions.sh" ]; then
  source "${FLOX_ENV_CACHE}/functions/shell_functions.sh"
fi
'''

fish = '''
# Source secure wrapper functions
if test -f "$FLOX_ENV_CACHE/functions/shell_functions.fish" 
  source "$FLOX_ENV_CACHE/functions/shell_functions.fish"
end
'''

## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false
